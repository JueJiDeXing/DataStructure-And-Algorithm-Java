package 算法.算法基础.深搜_广搜.深度优先;

public class _2477到达首都的最少油耗 {
    /*
    给你一棵 n 个节点的树（一个无向、连通、无环图），每个节点表示一个城市，
    编号从 0 到 n - 1 ，且恰好有 n - 1 条路。

    0 是首都。

    给你一个二维整数数组 roads ，其中 roads[i] = [ai, bi] ，表示城市 ai 和 bi 之间有一条 双向路 。
    每个城市里有一个代表，他们都要去首都参加一个会议。
    每座城市里有一辆车。给你一个整数 seats 表示每辆车里面座位的数目。
    城市里的代表可以选择乘坐所在城市的车，或者乘坐其他城市的车。相邻城市之间一辆车的油耗是一升汽油。
    请你返回到达首都最少需要多少升汽油。
     */

    /**
     <h1>边贡献法-深度优先</h1>
     总体思路: 计算每条边的贡献,统计贡献总和<br>
     <p>
     对于一颗树,所有节点都要经过边 才能到达根节点, 那么 统计每条边有节点经过的数量, 即可得到油耗<br>
     对于一条边,经过它的节点数 = 它所连接的子树的节点数<br>
     <p>
     另外:<br>
     当 seats>1 时, 说明低节点是可以搭乘高节点顺风车的<br>
     设某条边有节点经过的数量为n <br>
     那么, 计算一条边贡献的油耗时, 则有 k = ceil(n/seats)辆车<br>
     所以这条边油耗贡献值为ceil(n/seats)<br>
     <p>
     {@link 算法.图论.图的深搜和广搜._2477到达首都的最少油耗}
     */
    public long minimumFuelCost(int[][] roads, int seats) {
        return 0;
    }

}
