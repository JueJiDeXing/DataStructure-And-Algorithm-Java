package 算法.数学.博弈论;


public class _292Nim游戏 {
    /*
    你和你的朋友，两个人一起玩 Nim 游戏：

    桌子上有一堆石头。
    你们轮流进行自己的回合， 你作为先手 。
    每一回合，轮到的人拿掉 1 - 3 块石头。
    拿掉最后一块石头的人就是获胜者。
    假设你们每一步都是最优解。
    请编写一个函数，来判断你是否可以在给定石头数量为 n 的情况下赢得游戏。
    如果可以赢，返回 true；否则，返回 false 。
     */

    /**
     初始有n块石头,每次可以拿1-3块, 拿掉最后一块石头的人获胜<br>
     每一回合, 可以控制石头的减少量为4<br>
     假设初始n为4的倍数,先手拿x块(1<=x<=3),则后手可以拿4-x块,石头变为n-4<br>
     当第n/4个回合时,只剩下4块石头,必然是后手拿走的<br>
     <p><br>
     如果初始n不是4的倍数,先手可以拿走x块,使n-x是4的倍数<br>
     则问题回到初始n是4的倍数的情况,但先后手互换了,所以此时先手赢<br>
     <p><br>
     所以 先手必胜条件 是 初始n不是4的倍数<br>
     */
    public boolean canWinNim(int n) {
        return (n & 3) != 0;
    }


}
