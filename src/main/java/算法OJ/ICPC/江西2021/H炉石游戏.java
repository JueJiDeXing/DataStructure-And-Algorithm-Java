package 算法OJ.ICPC.江西2021;

/**
 已AC(这也打表吗?)
 */
public class H炉石游戏 {
    /*
    每一回合, p1抽牌 -> p1操作 -> p2抽牌 -> p2操作
    玩家初始有n点生命值,0点疲劳值
    玩家抽牌: 增加1点疲劳值,抽牌后 生命值-=疲劳值
    玩家操作: 给对手造成k点伤害 or 给自己回复k点血
    当 生命值 <= 0 时立即输掉比赛

    给定 n,k, 问谁能赢
     */
    /*
    如果 n == 1:  那么p1第一次抽牌就死了

    考虑一个大回合:
    (1) 都给自己加血:  则双方血量都等于 n - 疲劳值累计 + k
    (2) 一方给对方扣血,一方给自己回血:  血量情况与(1)相同
    (3) 都给对方扣血:  则双方血量都等于 n - 疲劳值累计 - k
    每个大回合后血量仍与对方保持一致,而疲劳值在不断累计,p1会先死
    p1的唯一胜法是 当双方血量降至 <=k+疲劳值 时, 攻击对方

    考虑最后一轮,此时双方血量为x,疲劳值为t-1
    p1(x,t-1) → p1抽牌扣血 → p1(x-t,t) → p1攻击 → p2(x-k,t-1) →  p2抽牌扣血 → p2(x-t-k,t)
    若 x <= t, 则p1输
    若 t < x <= t+k, 则p2输
     */
    /*
    t = int(input())
    for _ in range(t):
        n, k = map(int, input().split())
        if n == 1 or k + 1 < n:
            print("freesin")
        else:
            print("pllj")
     */

}
